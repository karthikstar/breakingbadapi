{"version":3,"sources":["img/logo.png","img/spinner.gif","components/ui/Header.js","components/characters/CharacterItem.js","components/ui/Spinner.js","components/characters/CharacterGrid.js","components/ui/Search.js","App.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","CharacterItem","item","img","name","portrayed","nickname","birthday","status","Spinner","spinner","style","width","margin","display","CharacterGrid","items","isLoading","map","key","char_id","Search","getQuery","useState","text","setText","type","placeholder","value","onChange","e","q","target","autoFocus","App","setItems","setIsLoading","query","setQuery","useEffect","a","axios","result","data","fetchItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,sMCY5BC,EARA,WACX,OACI,4BAAQC,UAAU,UACd,yBAAKC,IAAKC,IAAMC,IAAI,OCwBjBC,EA7BO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACE,yBAAKL,UAAU,QACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACb,yBAAKC,IAAKI,EAAKC,IAAKH,IAAI,MAE1B,yBAAKH,UAAU,aACb,4BAAKK,EAAKE,MACV,4BACE,4BACE,+CADF,IACgCF,EAAKG,WAErC,4BACE,6CADF,IAC8BH,EAAKI,UAEnC,4BACE,6CADF,IAC8BJ,EAAKK,UAEnC,4BACE,2CADF,IAC4BL,EAAKM,a,iBCP9BC,EAXC,WACZ,OACI,yBACAX,IAAKY,IACLC,MAAS,CAACC,MAAM,QAASC,OAAO,OAAOC,QAAQ,SAC/Cd,IAAI,aCUGe,EAfO,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,MACpB,OAD0C,EAAfC,UAGvB,kBAAC,EAAD,MAEI,6BAASpB,UAAU,SACdmB,EAAME,KAAI,SAAAhB,GAAI,OACX,kBAAC,EAAD,CAAeiB,IAAKjB,EAAKkB,QAASlB,KAAMA,SCc7CmB,EAtBA,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACHC,mBAAS,IADN,mBACpBC,EADoB,KACdC,EADc,KAO3B,OACI,8BACI,2BACIC,KAAK,OACL7B,UAAU,eACV8B,YAAY,oBACZC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAXJC,EAWoBD,EAAEE,OAAOJ,MAV3CH,EAAQM,QACRT,EAASS,GAFI,IAACA,GAYNE,WAAS,MCqBVC,G,MA7BH,WAAM,MAEUX,mBAAS,IAFnB,mBAETP,EAFS,KAEFmB,EAFE,OAGkBZ,oBAAS,GAH3B,mBAGTN,EAHS,KAGEmB,EAHF,OAIUb,mBAAS,IAJnB,mBAITc,EAJS,KAIFC,EAJE,KAoBhB,OAdAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,sEACIC,IAAM,sDAAD,OAAuDJ,IADhE,OACXK,EADW,OAIjBP,EAASO,EAAOC,MAChBP,GAAa,GALI,2CAAH,qDAOhBQ,KACC,CAACP,IAMF,yBAAKxC,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQyB,SAAU,SAACS,GAAD,OAAOO,EAASP,MAClC,kBAAC,EAAD,CAAed,UAAWA,EAAWD,MAAOA,OC9BlD6B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ebc0f5ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3795f66d.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.235b9b3e.gif\";","import React from 'react'\r\nimport logo from '../../img/logo.png'\r\n// going two levels up ^\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className='center'>\r\n            <img src={logo} alt='' />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\n\r\nconst CharacterItem = ({ item }) => {\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-inner'>\r\n        <div className='card-front'>\r\n          <img src={item.img} alt='' />\r\n        </div>\r\n        <div className='card-back'>\r\n          <h1>{item.name}</h1>\r\n          <ul>\r\n            <li>\r\n              <strong>Actor Name:</strong> {item.portrayed}\r\n            </li>\r\n            <li>\r\n              <strong>Nickname:</strong> {item.nickname}\r\n            </li>\r\n            <li>\r\n              <strong>Birthday:</strong> {item.birthday}\r\n            </li>\r\n            <li>\r\n              <strong>Status:</strong> {item.status}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharacterItem","import React from 'react';\r\nimport spinner from '../../img/spinner.gif';\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <img \r\n        src={spinner} \r\n        style = {{width:'200px', margin:'auto',display:'block'}} \r\n        alt='Loading' \r\n            \r\n        />\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react';\r\nimport CharacterItem from './CharacterItem';\r\nimport Spinner from '../ui/Spinner';\r\n\r\nconst CharacterGrid = ({items, isLoading}) => {\r\n    return (\r\n        isLoading ? (\r\n        <Spinner />\r\n        ) : (\r\n            <section className=\"cards\">\r\n                {items.map(item => (\r\n                    <CharacterItem key={item.char_id} item={item} />\r\n                ))}\r\n            </section>\r\n        )\r\n\r\n    )\r\n}\r\n\r\nexport default CharacterGrid\r\n","import React, {useState} from 'react';\r\n\r\n\r\nconst Search = ({getQuery}) => {\r\n    const [text, setText] = useState('') // set empty string by default\r\n\r\n    const onChange = (q) => {\r\n        setText(q)\r\n        getQuery(q)\r\n    }\r\n    return (\r\n        <form>\r\n            <input \r\n                type='text' \r\n                className='form-control'\r\n                placeholder='Search Characters' \r\n                value={text}\r\n                onChange={(e) => onChange(e.target.value)}\r\n                autoFocus\r\n\r\n        />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React,{useState , useEffect} from 'react';\nimport axios from 'axios';\nimport Header from './components/ui/Header';\nimport CharacterGrid from './components/characters/CharacterGrid';\nimport Search from './components/ui/Search';\n\nimport './App.css';\n\n\n\nconst App = () => {\n// state \n  const [items, setItems] = useState([])\n  const [isLoading, setIsLoading] = useState(true) // true by default\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      const result = await axios(`https://www.breakingbadapi.com/api/characters?name=${query}`) // axios returns a promise\n      \n      // console.log(result.data)\n      setItems(result.data)\n      setIsLoading(false)\n    }\n    fetchItems()\n  }, [query])\n// setting query as a dependency \n// this means that whenever query value changes, useEffect fires off.\n\n  // when we use useEffect we need put dependencies as 2nd parameter\n  return (\n    <div className=\"container\">\n      <Header />\n      <Search getQuery={(q) => setQuery(q)} />\n      <CharacterGrid isLoading={isLoading} items={items} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}